{"ast":null,"code":"var _jsxFileName = \"/Users/windsor/FYP_Front_end/src/components/Field.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Field(props) {\n  _s();\n\n  const [brand, setBrand] = useState(\"\");\n  const [icon, setIcon] = useState(\"\"); //useEffect(()=>{\n  //  UpdateField(props.image) //update Field Element using the image URL\n  //},[])\n\n  const UpdateField = image => {\n    return new Promise(async (resolve, reject) => {\n      var formdata = new FormData();\n      let blob = await fetch(image).then(r => r.blob());\n      formdata.append(\"image\", blob);\n      fetch(props.url + \"detectCarBrand\", {\n        method: 'POST',\n        body: formdata,\n        redirect: 'follow'\n      }).then(response => response.text()).then(response => {\n        const json = JSON.parse(response);\n        console.log(json);\n\n        if (Array.isArray(json) && json.length > 0) {\n          console.log(json[0].name);\n          setBrand(json[0].name);\n          setIcon(props.logo.getImage(json[0].name));\n        } else {\n          setBrand(\"\");\n          setIcon(props.logo.getImage(\"\"));\n        }\n      }).catch(error => console.log('error', error));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      disabled: true,\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.image,\n        className: \"field_image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), props.des && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"describe\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: icon,\n          className: \"field_brand\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: brand\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Field, \"1OeJOrLRF1tNzHVRSVyAEzPV4Rw=\");\n\n_c = Field;\n\nvar _c;\n\n$RefreshReg$(_c, \"Field\");","map":{"version":3,"sources":["/Users/windsor/FYP_Front_end/src/components/Field.js"],"names":["React","useState","useEffect","Field","props","brand","setBrand","icon","setIcon","UpdateField","image","Promise","resolve","reject","formdata","FormData","blob","fetch","then","r","append","url","method","body","redirect","response","text","json","JSON","parse","console","log","Array","isArray","length","name","logo","getImage","catch","error","des"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nexport default function Field(props){\n\n  const [brand, setBrand] = useState(\"\")\n  const [icon, setIcon] = useState(\"\")\n  //useEffect(()=>{\n  //  UpdateField(props.image) //update Field Element using the image URL\n  //},[])\n\n  const UpdateField = (image) => {\n    \n    return new Promise(async (resolve, reject) => {\n      var formdata = new FormData();\n      let blob = await fetch(image).then(r => r.blob());\n    formdata.append(\"image\",blob);\n\n    fetch(props.url+\"detectCarBrand\", {\n        method: 'POST',\n        body: formdata,\n        redirect: 'follow'\n    })\n      .then(response => response.text())\n      .then(response => {\n            const json = JSON.parse(response)\n            console.log(json)\n            if (Array.isArray(json) && json.length > 0) {\n                console.log(json[0].name)\n                setBrand(json[0].name);\n                setIcon(props.logo.getImage(json[0].name))\n            }\n            else{\n                setBrand(\"\");\n                setIcon(props.logo.getImage(\"\"));\n            }\n      })\n      .catch(error => console.log('error', error));\n    })\n  }\n  \n\n  return(\n    <div>\n      <fieldset disabled className = \"field\" >\n          <legend>{props.name}</legend>\n          <img src = {props.image} className = \"field_image\"/>\n          <br />\n          {props.des && <div className = \"describe\">\n              <img src = {icon} className = \"field_brand\"/>\n              <h4>{brand}</h4>\n          </div>}\n      </fieldset>\n    </div>  \n  )\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/windsor/FYP_Front_end/src/components/Field.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Field(props) {\n  _s();\n\n  const [brand, setBrand] = useState(\"\");\n  const [icon, setIcon] = useState(\"\");\n  useEffect(() => {\n    UpdateField(props.image); //update Field Element using the image URL\n  }, []);\n  const [updateCount, setUpdateCount] = useState(0);\n  const socket = io(props.url);\n  useEffect(() => {\n    socket.on('connect', function () {});\n    socket.on(\"CameraImageUpdated\", arg => {\n      console.print('haha');\n      UpdateField(props.image);\n\n      if (arg == props.cameraID) {\n        console.print('haha');\n        UpdateField(props.image);\n      }\n    });\n  }, []);\n\n  const UpdateField = image => {\n    return new Promise(async (resolve, reject) => {\n      var formdata = new FormData();\n      let blob = await fetch(image).then(r => r.blob());\n      formdata.append(\"image\", blob);\n      fetch(props.url + \"detectCarBrand\", {\n        method: 'POST',\n        body: formdata,\n        redirect: 'follow'\n      }).then(response => response.text()).then(response => {\n        const json = JSON.parse(response);\n        console.log(json);\n\n        if (Array.isArray(json) && json.length > 0) {\n          console.log(json[0].name);\n          setBrand(json[0].name);\n          setIcon(props.logo.getImage(json[0].name));\n        } else {\n          setBrand(\"\");\n          setIcon(props.logo.getImage(\"\"));\n        }\n      }).catch(error => console.log('error', error));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      disabled: true,\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.image,\n        className: \"field_image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), props.des && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"describe\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: icon,\n          className: \"field_brand\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: brand\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Field, \"3tGR7f+Ch7upwHdwsd7vDDbLNMo=\");\n\n_c = Field;\n\nvar _c;\n\n$RefreshReg$(_c, \"Field\");","map":{"version":3,"sources":["/Users/windsor/FYP_Front_end/src/components/Field.js"],"names":["React","useState","useEffect","io","Field","props","brand","setBrand","icon","setIcon","UpdateField","image","updateCount","setUpdateCount","socket","url","on","arg","console","print","cameraID","Promise","resolve","reject","formdata","FormData","blob","fetch","then","r","append","method","body","redirect","response","text","json","JSON","parse","log","Array","isArray","length","name","logo","getImage","catch","error","des"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport io from 'socket.io-client'\n\nexport default function Field(props){\n\n  const [brand, setBrand] = useState(\"\")\n  const [icon, setIcon] = useState(\"\")\n  useEffect(()=>{\n    UpdateField(props.image) //update Field Element using the image URL\n  },[])\n\n  const [updateCount, setUpdateCount] = useState(0)\n  const socket = io(props.url);\n  useEffect( () => {\n      socket.on('connect', function(){});\n      socket.on(\"CameraImageUpdated\", (arg) => { \n        console.print('haha');\n        UpdateField(props.image);\n          if (arg == props.cameraID)\n\n          {\n            console.print('haha');\n            UpdateField(props.image);\n          }\n      });\n  }, []);\n\n  const UpdateField = (image) => {\n    \n    return new Promise(async (resolve, reject) => {\n      var formdata = new FormData();\n      let blob = await fetch(image).then(r => r.blob());\n    formdata.append(\"image\",blob);\n\n    fetch(props.url+\"detectCarBrand\", {\n        method: 'POST',\n        body: formdata,\n        redirect: 'follow'\n    })\n      .then(response => response.text())\n      .then(response => {\n            const json = JSON.parse(response)\n            console.log(json)\n            if (Array.isArray(json) && json.length > 0) {\n                console.log(json[0].name)\n                setBrand(json[0].name);\n                setIcon(props.logo.getImage(json[0].name))\n            }\n            else{\n                setBrand(\"\");\n                setIcon(props.logo.getImage(\"\"));\n            }\n      })\n      .catch(error => console.log('error', error));\n    })\n  }\n  \n\n  return(\n    <div>\n      <fieldset disabled className = \"field\" >\n          <legend>{props.name}</legend>\n          <img src = {props.image} className = \"field_image\"/>\n          <br />\n          {props.des && <div className = \"describe\">\n              <img src = {icon} className = \"field_brand\"/>\n              <h4>{brand}</h4>\n          </div>}\n      </fieldset>\n    </div>  \n  )\n}"]},"metadata":{},"sourceType":"module"}
[{"D:\\course note\\fyp\\website\\新建文件夹\\FYP_Front_end\\src\\index.js":"1","D:\\course note\\fyp\\website\\新建文件夹\\FYP_Front_end\\src\\App.js":"2","D:\\course note\\fyp\\website\\新建文件夹\\FYP_Front_end\\src\\components\\Header.js":"3","D:\\course note\\fyp\\website\\新建文件夹\\FYP_Front_end\\src\\components\\Camera.js":"4","D:\\course note\\fyp\\website\\新建文件夹\\FYP_Front_end\\src\\components\\Advert.js":"5","D:\\course note\\fyp\\website\\新建文件夹\\FYP_Front_end\\src\\components\\slot.js":"6"},{"size":154,"mtime":1649851925054,"results":"7","hashOfConfig":"8"},{"size":1241,"mtime":1650376898100,"results":"9","hashOfConfig":"8"},{"size":234,"mtime":1650360159142,"results":"10","hashOfConfig":"8"},{"size":8003,"mtime":1650439668443,"results":"11","hashOfConfig":"8"},{"size":5037,"mtime":1650439656526,"results":"12","hashOfConfig":"8"},{"size":3469,"mtime":1650362230271,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"lsolaw",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"D:\\course note\\fyp\\website\\新建文件夹\\FYP_Front_end\\src\\index.js",[],[],["36","37"],"D:\\course note\\fyp\\website\\新建文件夹\\FYP_Front_end\\src\\App.js",[],[],["38","39"],"D:\\course note\\fyp\\website\\新建文件夹\\FYP_Front_end\\src\\components\\Header.js",[],[],["40","41"],"D:\\course note\\fyp\\website\\新建文件夹\\FYP_Front_end\\src\\components\\Camera.js",["42","43","44","45"],[],"D:\\course note\\fyp\\website\\新建文件夹\\FYP_Front_end\\src\\components\\Advert.js",["46","47","48","49","50"],[],"D:\\course note\\fyp\\website\\新建文件夹\\FYP_Front_end\\src\\components\\slot.js",["51","52","53"],[],"import React from \"react\"\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport io from 'socket.io-client'\r\nimport \"./slot.css\"\r\nexport default function Slot(props){\r\n\r\n  const [brand, setBrand] = useState(\"\")\r\n  const [icon, setIcon] = useState(\"\")\r\n  const [image, setImage] = useState((props.image))\r\n  const [LP , setLP] = useState(\"\")\r\n  //Load Field Details upon initial rendering\r\n  useEffect(()=>{\r\n      UpdateField(props.image) //update Field Element using the image URL  \r\n  },[])\r\n\r\n  //Socket.IO listener for auto-updating\r\n  useEffect( () => {\r\n      //console.log('add camera ', props.cameraID);\r\n      //console.log('add socket ', props.url);\r\n      //console.log('add image ', props.image);\r\n      const socket = io(props.url);\r\n      socket.on('connect', function(){});\r\n      socket.on(\"CameraImageUpdated\", (arg) => { \r\n        //console.log(image);\r\n          if (arg === props.cameraID) //Message applies to all the fields of the same cameraID\r\n          {\r\n              UpdateField(props.image);\r\n              //console.log(image);\r\n          }\r\n      });\r\n  }, []);\r\n\r\n  const UpdateField = (image) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      var formdata = new FormData();\r\n      let blob = await fetch(image).then(r => r.blob());\r\n    formdata.append(\"image\",blob);\r\n\r\n    //set the image of field\r\n    setImage(URL.createObjectURL(blob));\r\n    if(props.des)\r\n    {\r\n        fetch(props.url + \"detectCarBrand\", {\r\n        method: 'POST',\r\n        body: formdata,\r\n        redirect: 'follow'\r\n      })\r\n      .then(response => response.text())\r\n      .then(response => {\r\n            const json = JSON.parse(response)\r\n            console.log(json)\r\n            if (Array.isArray(json) && json.length > 0) {\r\n                console.log(json[0].name)\r\n                setBrand(json[0].name);\r\n                setIcon(props.logo.getImage(json[0].name))\r\n                if(props.AdViewer === props.name){\r\n                  props.SetAd(props.Ad.getImage(json[0].name));\r\n                }\r\n            }\r\n            else{\r\n                setBrand(\"\");\r\n                setIcon(props.logo.getImage(\"\"));\r\n            }\r\n      })\r\n      .catch(error => console.log('error', error));  \r\n\r\n      fetch(props.url + \"detectLP\", {\r\n        method: 'POST',\r\n        body: formdata,\r\n        redirect: 'follow'\r\n      })\r\n      .then(response => response.text())\r\n      .then(response => {\r\n            const json = JSON.parse(response)\r\n            console.log(json)\r\n            if(json.licencePlate){\r\n              setLP(json.licencePlate)\r\n            }else{\r\n              setLP(\"can not recognite\")\r\n            }\r\n\r\n      })\r\n      .catch(error => console.log('error', error));\r\n    }\r\n    })\r\n  }\r\n  \r\n  function changeAd(){\r\n    props.SetAd(props.Ad.getImage(brand));\r\n    props.SetAdViewer(props.name)\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <fieldset disabled className = {props.className} >\r\n          <legend>{props.name}</legend>\r\n          <img src = {image} className = \"field_image\" alt= {props.name+\"-image\"} onClick={changeAd}/>\r\n          {props.des && <div className = \"information\">\r\n              <div className = \"brand_detect\">\r\n                <img src = {icon} className = \"field_brand\"/>\r\n                <h4>{brand}</h4>\r\n              </div>\r\n              <h4 className=\"field_LP\">License Plate:{LP}</h4>\r\n          </div>\r\n          }\r\n      </fieldset>\r\n    </div>  \r\n  )\r\n}",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"54","replacedBy":"58"},{"ruleId":"56","replacedBy":"59"},{"ruleId":"54","replacedBy":"60"},{"ruleId":"56","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":78,"column":11,"nodeType":"64","messageId":"65","endLine":78,"endColumn":21},{"ruleId":"62","severity":1,"message":"66","line":87,"column":12,"nodeType":"64","messageId":"65","endLine":87,"endColumn":14},{"ruleId":"67","severity":1,"message":"68","line":101,"column":6,"nodeType":"69","endLine":101,"endColumn":8,"suggestions":"70"},{"ruleId":"67","severity":1,"message":"71","line":104,"column":7,"nodeType":"69","endLine":104,"endColumn":9,"suggestions":"72"},{"ruleId":"62","severity":1,"message":"73","line":1,"column":37,"nodeType":"64","messageId":"65","endLine":1,"endColumn":45},{"ruleId":"67","severity":1,"message":"74","line":55,"column":7,"nodeType":"69","endLine":55,"endColumn":9,"suggestions":"75"},{"ruleId":"67","severity":1,"message":"76","line":91,"column":8,"nodeType":"69","endLine":91,"endColumn":10,"suggestions":"77"},{"ruleId":"78","severity":1,"message":"79","line":147,"column":38,"nodeType":"80","messageId":"81","endLine":147,"endColumn":40},{"ruleId":"82","severity":1,"message":"83","line":148,"column":17,"nodeType":"84","endLine":148,"endColumn":63},{"ruleId":"67","severity":1,"message":"85","line":15,"column":5,"nodeType":"69","endLine":15,"endColumn":7,"suggestions":"86"},{"ruleId":"67","severity":1,"message":"87","line":32,"column":6,"nodeType":"69","endLine":32,"endColumn":8,"suggestions":"88"},{"ruleId":"82","severity":1,"message":"83","line":101,"column":17,"nodeType":"84","endLine":101,"endColumn":62},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],["89"],["90"],["89"],["90"],"no-unused-vars","'socket_url' is assigned a value but never used.","Identifier","unusedVar","'ad' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cameraID'. Either include it or remove the dependency array.","ArrayExpression",["91"],"React Hook useEffect has a missing dependency: 'getImage'. Either include it or remove the dependency array.",["92"],"'Fragment' is defined but never used.","React Hook useEffect has a missing dependency: 'getSlot'. Either include it or remove the dependency array.",["93"],"React Hook useEffect has missing dependencies: 'UpdateImage', 'adViewer', 'cameraID', and 'cropNum'. Either include them or remove the dependency array.",["94"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'UpdateField' and 'props.image'. Either include them or remove the dependency array.",["95"],"React Hook useEffect has missing dependencies: 'UpdateField', 'props.cameraID', 'props.image', and 'props.url'. Either include them or remove the dependency array.",["96"],"no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [cameraID]",{"range":"109","text":"110"},"Update the dependencies array to be: [getImage]",{"range":"111","text":"112"},"Update the dependencies array to be: [getSlot]",{"range":"113","text":"114"},"Update the dependencies array to be: [UpdateImage, adViewer, cameraID, cropNum]",{"range":"115","text":"116"},"Update the dependencies array to be: [UpdateField, props.image]",{"range":"117","text":"118"},"Update the dependencies array to be: [UpdateField, props.cameraID, props.image, props.url]",{"range":"119","text":"120"},[3664,3666],"[cameraID]",[3720,3722],"[getImage]",[1718,1720],"[getSlot]",[3094,3096],"[UpdateImage, adViewer, cameraID, cropNum]",[513,515],"[UpdateField, props.image]",[1112,1114],"[UpdateField, props.cameraID, props.image, props.url]"]
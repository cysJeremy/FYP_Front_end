[{"D:\\course note\\fyp\\website\\新建文件夹\\FYP_Front_end\\src\\index.js":"1","D:\\course note\\fyp\\website\\新建文件夹\\FYP_Front_end\\src\\App.js":"2","D:\\course note\\fyp\\website\\新建文件夹\\FYP_Front_end\\src\\components\\Header.js":"3","D:\\course note\\fyp\\website\\新建文件夹\\FYP_Front_end\\src\\components\\Camera.js":"4","D:\\course note\\fyp\\website\\新建文件夹\\FYP_Front_end\\src\\components\\Advert.js":"5","D:\\course note\\fyp\\website\\新建文件夹\\FYP_Front_end\\src\\components\\slot.js":"6"},{"size":154,"mtime":1649851925054,"results":"7","hashOfConfig":"8"},{"size":1251,"mtime":1650864152930,"results":"9","hashOfConfig":"8"},{"size":234,"mtime":1650360159142,"results":"10","hashOfConfig":"8"},{"size":8003,"mtime":1650439668443,"results":"11","hashOfConfig":"8"},{"size":6259,"mtime":1650874576378,"results":"12","hashOfConfig":"8"},{"size":3641,"mtime":1650867905821,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"lsolaw",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\course note\\fyp\\website\\新建文件夹\\FYP_Front_end\\src\\index.js",[],[],["35","36"],"D:\\course note\\fyp\\website\\新建文件夹\\FYP_Front_end\\src\\App.js",[],[],"D:\\course note\\fyp\\website\\新建文件夹\\FYP_Front_end\\src\\components\\Header.js",[],[],["37","38"],"D:\\course note\\fyp\\website\\新建文件夹\\FYP_Front_end\\src\\components\\Camera.js",["39","40","41","42"],[],"import React,{ useEffect, useState, Fragment} from \"react\"\r\nimport io from 'socket.io-client'\r\nimport \"./Camera.css\"\r\nimport Slot from './slot'\r\n\r\nexport default function Camera(props) {\r\n    const Logo = function(){\r\n        const logo = {\r\n            audi: require(\"../logo/Audi.png\"),\r\n            benz: require(\"../logo/Benz.png\"),\r\n            bmw: require(\"../logo/BMW.png\"),\r\n            honda: require(\"../logo/Honda.png\"),\r\n            hyundai: require(\"../logo/Hyundai.jpg\"),\r\n            infiniti: require(\"../logo/Infiniti.png\"),\r\n            kia: require(\"../logo/Kia.png\"),\r\n            landrover: require(\"../logo/LandRover.png\"),\r\n            lexus: require(\"../logo/Lexus.png\"),\r\n            mini: require(\"../logo/Mini.png\"),\r\n            mazda: require(\"../logo/Mazda.png\"),\r\n            mitsubishi: require(\"../logo/Mitsubishi.png\"),\r\n            nissan: require(\"../logo/Nissan.png\"),\r\n            porsche: require(\"../logo/Porsche.png\"),\r\n            subaru: require(\"../logo/Subaru.png\"),\r\n            suzuki: require(\"../logo/Suzuki.png\"),\r\n            tesla: require(\"../logo/Tesla.png\"),\r\n            toyota: require(\"../logo/Toyota.png\"),\r\n            volkswagen: require(\"../logo/Volkswagen.png\"),\r\n            volvo: require(\"../logo/Volvo.png\")\r\n        };\r\n        \r\n        const getImage = function(name){\r\n            let brand = name.toLowerCase();\r\n            if(brand in logo)\r\n                return logo[brand];\r\n            return require(\"../logo/Not_result.png\");\r\n        };\r\n        \r\n        return {getImage};\r\n    };\r\n\r\n    const Ad = function(){\r\n        const cloth = require(\"../ad/Clothing.jpg\")\r\n        const food = require(\"../ad/food.jpg\")\r\n        const shoes = require(\"../ad/shoes.jpg\")\r\n        const watch = require(\"../ad/watch.jpg\")\r\n        const ad = {\r\n            audi: cloth,\r\n            benz: watch,\r\n            bmw: watch,\r\n            honda: food,\r\n            hyundai: food,\r\n            infiniti: cloth,\r\n            kia: cloth,\r\n            landrover: shoes,\r\n            lexus: cloth,\r\n            mini: food,\r\n            mazda: shoes,\r\n            mitsubishi: cloth,\r\n            nissan: shoes,\r\n            porsche: watch,\r\n            subaru: food,\r\n            suzuki: cloth,\r\n            tesla: watch,\r\n            toyota: cloth,\r\n            volkswagen: cloth,\r\n            volvo: food\r\n        };\r\n        \r\n        const getImage = function(name){\r\n            let brand = name.toLowerCase();\r\n            if(brand in ad)\r\n                return ad[brand];\r\n            return require(\"../logo/Not_result.png\");\r\n        };\r\n        \r\n        return {getImage};\r\n    };\r\n    const socket_url = 'ws://localhost:4000/'\r\n    const flask_url = 'http://localhost:4000/'\r\n    let cameraID\r\n    (props.cameraID? cameraID = props.cameraID:cameraID = \"HKUST_001\")\r\n    const cameraUrl = flask_url + \"getCameraProperties?cameraID=\"+cameraID\r\n    const [field, setField] = useState([])\r\n    const [cropNum, setCropNum] = useState(0)\r\n    const [mainField, setMainField] = useState()\r\n    const [lastUpdateTime, setLastUpdateTime] = useState(Date().toLocaleString())\r\n    const [ad, setAd] = useState(Ad().getImage(\"bmw\"))\r\n    const [adViewer, setAdViewer] = useState();\r\n\r\n    useEffect( () => {\r\n      const socket = io(flask_url);\r\n      socket.on('connect', function(){});\r\n      socket.on(\"CameraImageUpdated\", (arg) => { \r\n        //console.log(image);\r\n          if (arg === cameraID) //Message applies to all the fields of the same cameraID\r\n          {\r\n              setLastUpdateTime(Date().toLocaleString());\r\n              //console.log(image);\r\n          }\r\n      });\r\n  }, []);\r\n    useEffect(() => {\r\n        getImage();\r\n    },[])\r\n\r\n\r\n    const getImage = () =>{\r\n        fetch(cameraUrl,{\r\n            method: 'GET',\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            redirect: 'follow'\r\n            })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    console.log(json);\r\n                    setCropNum(json.number_of_slots);\r\n\r\n                    setMainField(<Slot \r\n                        cameraID={cameraID} \r\n                        name=\"Original Camera Input\" \r\n                        image={flask_url + json.main_image_path} \r\n                        url={flask_url} \r\n                        className=\"field_main\"\r\n                        />);\r\n                        let name;\r\n                    const newfield = [];\r\n                    for(let i = 0; i < json.number_of_slots; i++){\r\n                        name = json.sub_image_path[i].split(\"/\")\r\n                        name = name[name.length-1].replace(cameraID+\"_\", \"\").replace(\".jpg\",\"\")\r\n                        newfield.push({\r\n                            cameraID:cameraID,\r\n                            key:i+1,\r\n                            name: \"Camera-\" + cameraID +\"-slot-\"+ name,\r\n                            image:flask_url + json.sub_image_path[i],\r\n                            des:\"detecting\",\r\n                        });\r\n                    }\r\n                    if(json.number_of_slots > 0){\r\n                        setAdViewer(\"Camera-\" + cameraID + \"-slot-1\");\r\n                    }\r\n                    console.log(newfield);\r\n                    setField(newfield);\r\n                })\r\n    }\r\n    /*useEffect(() => {\r\n        if(mainImage != \"\")\r\n            CropImage()\r\n    }, [mainImage])\r\n    console.log(cropNum,mainImage)\r\n    const CropImage = () => {\r\n     \r\n      return new Promise(async (resolve, reject) => {\r\n        var formdata = new FormData();\r\n        let blob = await fetch(mainImage).then(r => r.blob());\r\n      formdata.append(\"image\",blob);\r\n  \r\n    fetch(\"http://localhost:5000/updateCameraImage?cameraID=001\", {\r\n        method: 'POST',\r\n        body: formdata,\r\n        redirect: 'follow'\r\n    })\r\n      .then(response => response.text())\r\n      .then(response => {\r\n            const json = JSON.parse(response)\r\n            console.log(json)\r\n            if (Array.isArray(json) && json.length > 0) {\r\n              setBrandID(json[0].class)\r\n            }\r\n            else{\r\n              setBrandID(\"\")\r\n            }\r\n      })\r\n      .catch(error => console.log('error', error));\r\n      })\r\n    }*/\r\n    //const [brand, setBrand] = useState(\"\")\r\n    \r\n    /*useEffect(() => {\r\n        if(cropNum != 0 && slotImage.length == cropNum)\r\n            {const newfield = []\r\n            for(let i = 0; i < cropNum; i++){\r\n                console.log(slotImage[i])\r\n                DetectImage(slotImage[i])\r\n                \r\n                newfield.push({\r\n                    key:i+1,\r\n                    name: \"Camera\" + cameraID + \"-slot-\" + (i+1),\r\n                    image: slotImage[i],\r\n                    des:brand,\r\n                    brand:Logo().getImage(brand)\r\n                })\r\n            }\r\n            setField(newfield)}\r\n    }, [cropNum, slotImage.length])*/\r\n\r\n    \r\n    const fieldElements = field?field.map(field => (\r\n        <Slot\r\n            cameraID={field.cameraID}\r\n            key={field.key}\r\n            name={field.name}\r\n            image={field.image}  \r\n            des={field.des}\r\n            logo={Logo()}\r\n            url= {flask_url}\r\n            class = \"field_slot\"\r\n            Ad = {Ad()}\r\n            SetAd = {setAd}\r\n            AdViewer = {adViewer}\r\n            SetAdViewer = {setAdViewer}\r\n        />\r\n    )):<br/>\r\n          //brand={field.brand} \r\n    return(\r\n        <div className=\"Camera\">\r\n            {mainField}\r\n            <br/>\r\n            {cropNum !== 0 && <div className=\"detection_container\">\r\n                {fieldElements}\r\n                <br/>\r\n            </div>\r\n            }\r\n            \r\n            <br/>\r\n            \r\n            \r\n            <Fragment>Last Updated: {lastUpdateTime}</Fragment>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n/*<div>\r\n            <img src={ad} className=\"advertisement_sample\"></img>\r\n            </div>*/","D:\\course note\\fyp\\website\\新建文件夹\\FYP_Front_end\\src\\components\\Advert.js",["43","44","45","46"],[],"D:\\course note\\fyp\\website\\新建文件夹\\FYP_Front_end\\src\\components\\slot.js",["47","48","49","50"],[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"51","replacedBy":"55"},{"ruleId":"53","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":78,"column":11,"nodeType":"59","messageId":"60","endLine":78,"endColumn":21},{"ruleId":"57","severity":1,"message":"61","line":87,"column":12,"nodeType":"59","messageId":"60","endLine":87,"endColumn":14},{"ruleId":"62","severity":1,"message":"63","line":101,"column":6,"nodeType":"64","endLine":101,"endColumn":8,"suggestions":"65"},{"ruleId":"62","severity":1,"message":"66","line":104,"column":7,"nodeType":"64","endLine":104,"endColumn":9,"suggestions":"67"},{"ruleId":"62","severity":1,"message":"68","line":55,"column":7,"nodeType":"64","endLine":55,"endColumn":9,"suggestions":"69"},{"ruleId":"62","severity":1,"message":"70","line":105,"column":8,"nodeType":"64","endLine":105,"endColumn":10,"suggestions":"71"},{"ruleId":"72","severity":1,"message":"73","line":162,"column":51,"nodeType":"74","messageId":"75","endLine":162,"endColumn":53},{"ruleId":"76","severity":1,"message":"77","line":163,"column":17,"nodeType":"78","endLine":163,"endColumn":63},{"ruleId":"57","severity":1,"message":"79","line":1,"column":10,"nodeType":"59","messageId":"60","endLine":1,"endColumn":20},{"ruleId":"62","severity":1,"message":"80","line":16,"column":5,"nodeType":"64","endLine":16,"endColumn":7,"suggestions":"81"},{"ruleId":"62","severity":1,"message":"82","line":33,"column":6,"nodeType":"64","endLine":33,"endColumn":8,"suggestions":"83"},{"ruleId":"76","severity":1,"message":"77","line":104,"column":17,"nodeType":"78","endLine":104,"endColumn":62},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],["84"],["85"],"no-unused-vars","'socket_url' is assigned a value but never used.","Identifier","unusedVar","'ad' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cameraID'. Either include it or remove the dependency array.","ArrayExpression",["86"],"React Hook useEffect has a missing dependency: 'getImage'. Either include it or remove the dependency array.",["87"],"React Hook useEffect has a missing dependency: 'getSlot'. Either include it or remove the dependency array.",["88"],"React Hook useEffect has missing dependencies: 'UpdateImage' and 'cameraID'. Either include them or remove the dependency array.",["89"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'capitalize' is defined but never used.","React Hook useEffect has missing dependencies: 'UpdateField' and 'props.image'. Either include them or remove the dependency array.",["90"],"React Hook useEffect has missing dependencies: 'UpdateField', 'props.cameraID', 'props.image', and 'props.url'. Either include them or remove the dependency array.",["91"],"no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},"Update the dependencies array to be: [cameraID]",{"range":"104","text":"105"},"Update the dependencies array to be: [getImage]",{"range":"106","text":"107"},"Update the dependencies array to be: [getSlot]",{"range":"108","text":"109"},"Update the dependencies array to be: [UpdateImage, cameraID]",{"range":"110","text":"111"},"Update the dependencies array to be: [UpdateField, props.image]",{"range":"112","text":"113"},"Update the dependencies array to be: [UpdateField, props.cameraID, props.image, props.url]",{"range":"114","text":"115"},[3664,3666],"[cameraID]",[3720,3722],"[getImage]",[2198,2200],"[getSlot]",[4303,4305],"[UpdateImage, cameraID]",[562,564],"[UpdateField, props.image]",[1161,1163],"[UpdateField, props.cameraID, props.image, props.url]"]
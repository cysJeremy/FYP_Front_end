<<<<<<< Updated upstream
[{"/Users/windsor/FYP_Front_end/src/index.js":"1","/Users/windsor/FYP_Front_end/src/App.js":"2","/Users/windsor/FYP_Front_end/src/components/Camera.js":"3","/Users/windsor/FYP_Front_end/src/components/Header.js":"4","/Users/windsor/FYP_Front_end/src/components/Field.js":"5"},{"size":147,"mtime":1649856269938,"results":"6","hashOfConfig":"7"},{"size":676,"mtime":1649856269936,"results":"8","hashOfConfig":"7"},{"size":4934,"mtime":1649928217940,"results":"9","hashOfConfig":"7"},{"size":203,"mtime":1649856269937,"results":"10","hashOfConfig":"7"},{"size":2110,"mtime":1649930335478,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"14rpajs",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/windsor/FYP_Front_end/src/index.js",[],[],["28","29"],"/Users/windsor/FYP_Front_end/src/App.js",[],[],"/Users/windsor/FYP_Front_end/src/components/Camera.js",["30","31"],[],"/Users/windsor/FYP_Front_end/src/components/Header.js",[],[],"/Users/windsor/FYP_Front_end/src/components/Field.js",["32","33","34","35","36","37","38","39"],[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":39,"column":11,"nodeType":"46","messageId":"47","endLine":39,"endColumn":21},{"ruleId":"48","severity":1,"message":"49","line":51,"column":7,"nodeType":"50","endLine":51,"endColumn":9,"suggestions":"51"},{"ruleId":"44","severity":1,"message":"52","line":10,"column":17,"nodeType":"46","messageId":"47","endLine":10,"endColumn":25},{"ruleId":"48","severity":1,"message":"53","line":14,"column":5,"nodeType":"50","endLine":14,"endColumn":7,"suggestions":"54"},{"ruleId":"44","severity":1,"message":"55","line":16,"column":10,"nodeType":"46","messageId":"47","endLine":16,"endColumn":21},{"ruleId":"44","severity":1,"message":"56","line":16,"column":23,"nodeType":"46","messageId":"47","endLine":16,"endColumn":37},{"ruleId":"57","severity":1,"message":"58","line":24,"column":19,"nodeType":"59","messageId":"60","endLine":24,"endColumn":21},{"ruleId":"48","severity":1,"message":"61","line":31,"column":6,"nodeType":"50","endLine":31,"endColumn":8,"suggestions":"62"},{"ruleId":"63","severity":1,"message":"64","line":68,"column":11,"nodeType":"65","endLine":68,"endColumn":57},{"ruleId":"63","severity":1,"message":"64","line":71,"column":15,"nodeType":"65","endLine":71,"endColumn":60},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'socket_url' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getImage'. Either include it or remove the dependency array.","ArrayExpression",["68"],"'setImage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'UpdateField' and 'props.image'. Either include them or remove the dependency array.",["69"],"'updateCount' is assigned a value but never used.","'setUpdateCount' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'UpdateField', 'image', 'props.cameraID', 'props.image', and 'socket'. Either include them or remove the dependency array.",["70"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},{"desc":"73","fix":"74"},{"desc":"75","fix":"76"},"Update the dependencies array to be: [getImage]",{"range":"77","text":"78"},"Update the dependencies array to be: [UpdateField, props.image]",{"range":"79","text":"80"},"Update the dependencies array to be: [UpdateField, image, props.cameraID, props.image, socket]",{"range":"81","text":"82"},[1848,1850],"[getImage]",[396,398],"[UpdateField, props.image]",[837,839],"[UpdateField, image, props.cameraID, props.image, socket]"]
=======
[{"/Users/windsor/FYP_Front_end/src/index.js":"1","/Users/windsor/FYP_Front_end/src/App.js":"2","/Users/windsor/FYP_Front_end/src/components/Header.js":"3","/Users/windsor/FYP_Front_end/src/components/Camera.js":"4","/Users/windsor/FYP_Front_end/src/components/Field.js":"5"},{"size":147,"mtime":1649856269938,"results":"6","hashOfConfig":"7"},{"size":676,"mtime":1649856269936,"results":"8","hashOfConfig":"7"},{"size":203,"mtime":1649856269937,"results":"9","hashOfConfig":"7"},{"size":4835,"mtime":1649857499982,"results":"10","hashOfConfig":"7"},{"size":1567,"mtime":1649857089738,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"14rpajs",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"/Users/windsor/FYP_Front_end/src/index.js",[],[],["30","31"],"/Users/windsor/FYP_Front_end/src/App.js",[],[],"/Users/windsor/FYP_Front_end/src/components/Header.js",[],[],"/Users/windsor/FYP_Front_end/src/components/Camera.js",["32"],[],"import React,{ useEffect, useState } from \"react\"\nimport Field from './Field'\n\nexport default function Camera(props) {\n    const Logo = function(){\n        const logo = {\n            audi: require(\"../logo/Audi.png\"),\n            benz: require(\"../logo/Benz.png\"),\n            bmw: require(\"../logo/BMW.png\"),\n            honda: require(\"../logo/Honda.png\"),\n            hyundai: require(\"../logo/Hyundai.jpg\"),\n            infiniti: require(\"../logo/Infiniti.png\"),\n            kia: require(\"../logo/Kia.png\"),\n            landRover: require(\"../logo/LandRover.png\"),\n            lexus: require(\"../logo/Lexus.png\"),\n            mini: require(\"../logo/Mini.png\"),\n            mazda: require(\"../logo/Mazda.png\"),\n            mitsubishi: require(\"../logo/Mitsubishi.png\"),\n            nissan: require(\"../logo/Nissan.png\"),\n            porsche: require(\"../logo/Porsche.png\"),\n            subaru: require(\"../logo/Subaru.png\"),\n            suzuki: require(\"../logo/Suzuki.png\"),\n            tesla: require(\"../logo/Tesla.png\"),\n            toyota: require(\"../logo/Toyota.png\"),\n            volkswagen: require(\"../logo/Volkswagen.png\"),\n            volvo: require(\"../logo/Volvo.png\")\n        };\n        \n        const getImage = function(name){\n            let brand = name.toLowerCase();\n            if(brand in logo)\n                return logo[brand];\n            return require(\"../logo/Not_result.png\");\n        };\n        \n        return {getImage};\n    };\n\n    \n    const cameraID = \"001\"\n    const cameraUri = 'http://localhost:6000/getCameraImage?cameraID='+cameraID\n    const [field, setField] = useState([])\n    const [mainImage, setMainImage] = useState(\"\")\n    const [cropNum, setCropNum] = useState(0)\n    useEffect(() => {\n        getImage();\n    },[])\n\n    const getImage = () =>{\n        fetch(cameraUri,{\n            method: 'GET',\n            headers: { \"Content-Type\": \"application/json\" },\n            redirect: 'follow'\n            })\n                .then(res => res.json())\n                .then((json) => {\n                    console.log(json)\n                    setCropNum(json.number_of_slots);\n\n                    setMainImage(\"http://localhost:6000/\"+json.main_image_path)\n                    \n                    const newfield = []\n                    for(let i = 0; i < json.number_of_slots; i++){\n                        newfield.push({\n                            key:i+1,\n                            name: \"Camera\" + cameraID + \"-slot-\" + (i+1),\n                            image:\"http://localhost:6000/\"+json.sub_image_path[i],\n                            des:\"detecting\",\n                        });\n                    }\n                    console.log(newfield)\n                    setField(newfield)\n                })\n    }\n    /*useEffect(() => {\n        if(mainImage != \"\")\n            CropImage()\n    }, [mainImage])\n    console.log(cropNum,mainImage)\n    const CropImage = () => {\n     \n      return new Promise(async (resolve, reject) => {\n        var formdata = new FormData();\n        let blob = await fetch(mainImage).then(r => r.blob());\n      formdata.append(\"image\",blob);\n  \n    fetch(\"http://localhost:5000/updateCameraImage?cameraID=001\", {\n        method: 'POST',\n        body: formdata,\n        redirect: 'follow'\n    })\n      .then(response => response.text())\n      .then(response => {\n            const json = JSON.parse(response)\n            console.log(json)\n            if (Array.isArray(json) && json.length > 0) {\n              setBrandID(json[0].class)\n            }\n            else{\n              setBrandID(\"\")\n            }\n      })\n      .catch(error => console.log('error', error));\n      })\n    }*/\n    //const [brand, setBrand] = useState(\"\")\n    \n    /*useEffect(() => {\n        if(cropNum != 0 && slotImage.length == cropNum)\n            {const newfield = []\n            for(let i = 0; i < cropNum; i++){\n                console.log(slotImage[i])\n                DetectImage(slotImage[i])\n                \n                newfield.push({\n                    key:i+1,\n                    name: \"Camera\" + cameraID + \"-slot-\" + (i+1),\n                    image: slotImage[i],\n                    des:brand,\n                    brand:Logo().getImage(brand)\n                })\n            }\n            setField(newfield)}\n    }, [cropNum, slotImage.length])*/\n\n  \n    const fieldElements = field?field.map(field => (\n        <Field\n            key={field.key}\n            name={field.name}\n            image={field.image}  \n            des={field.des}\n            logo={Logo()}\n        />\n    )):<br/>\n          //brand={field.brand} \n    return(\n        <div>\n        <Field image={mainImage} name=\"input\"/>\n            {cropNum !== 0 && <div className=\"detection_container\">\n                {fieldElements}\n            </div>}\n        </div>\n    )\n}\n\n/**/","/Users/windsor/FYP_Front_end/src/components/Field.js",["33","34","35"],[],"import React from \"react\"\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nexport default function Field(props){\n\n  const [brand, setBrand] = useState(\"\")\n  const [icon, setIcon] = useState(\"\")\n  useEffect(()=>{\n    DetectImage(props.image)  \n  },[brand,icon])\n\n  const DetectImage = (image) => {\n    \n    return new Promise(async (resolve, reject) => {\n      var formdata = new FormData();\n      let blob = await fetch(image).then(r => r.blob());\n    formdata.append(\"image\",blob);\n\n    fetch(\"http://localhost:6000/detectCarBrand\", {\n        method: 'POST',\n        body: formdata,\n        redirect: 'follow'\n    })\n      .then(response => response.text())\n      .then(response => {\n            const json = JSON.parse(response)\n            console.log(json)\n            if (Array.isArray(json) && json.length > 0) {\n                console.log(json[0].name)\n                setBrand(json[0].name);\n                setIcon(props.logo.getImage(json[0].name))\n            }\n            else{\n                setBrand(\"\");\n                setIcon(props.logo.getImage(\"\"));\n            }\n      })\n      .catch(error => console.log('error', error));\n    })\n  }\n  \n\n  return(\n    <div>\n      <fieldset disabled className = \"field\" >\n          <legend>{props.name}</legend>\n          <img src = {props.image} className = \"field_image\"/>\n          <br />\n          {props.des && <div className = \"describe\">\n              <img src = {icon} className = \"field_brand\"/>\n              <h4>{brand}</h4>\n          </div>}\n      </fieldset>\n    </div>  \n  )\n}",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":47,"column":7,"nodeType":"42","endLine":47,"endColumn":9,"suggestions":"43"},{"ruleId":"40","severity":1,"message":"44","line":10,"column":5,"nodeType":"42","endLine":10,"endColumn":17,"suggestions":"45"},{"ruleId":"46","severity":1,"message":"47","line":47,"column":11,"nodeType":"48","endLine":47,"endColumn":63},{"ruleId":"46","severity":1,"message":"47","line":50,"column":15,"nodeType":"48","endLine":50,"endColumn":60},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getImage'. Either include it or remove the dependency array.","ArrayExpression",["51"],"React Hook useEffect has missing dependencies: 'DetectImage' and 'props.image'. Either include them or remove the dependency array.",["52"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"53","fix":"54"},{"desc":"55","fix":"56"},"Update the dependencies array to be: [getImage]",{"range":"57","text":"58"},"Update the dependencies array to be: [DetectImage, brand, icon, props.image]",{"range":"59","text":"60"},[1766,1768],"[getImage]",[267,279],"[DetectImage, brand, icon, props.image]"]
>>>>>>> Stashed changes
